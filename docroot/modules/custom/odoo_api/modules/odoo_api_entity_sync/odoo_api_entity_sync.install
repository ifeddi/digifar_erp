<?php

/**
 * @file
 * Install, update and uninstall functions for the odoo_api_entity_sync module.
 */

use Drupal\Core\Entity\EntityTypeInterface;

/**
 * Implements hook_schema().
 */
function odoo_api_entity_sync_schema() {
  $schema['odoo_api_entity_sync'] = [
    'description' => 'Stores ID map and sync status of entities exported to Odoo',
    'fields' => [
      'entity_type' => [
        'description' => 'Entity type of the synced entity.',
        'type' => 'varchar',
        'length' => EntityTypeInterface::ID_MAX_LENGTH,
        'not null' => TRUE,
      ],
      'odoo_model' => [
        'description' => 'Odoo model of the synced entity.',
        'type' => 'varchar',
        'length' => '128',
        'not null' => TRUE,
      ],
      'export_type' => [
        'description' => 'Export type. May be used to export same entity multiple types.',
        'type' => 'varchar',
        'length' => '128',
        'not null' => TRUE,
        'default' => 'default',
      ],
      'entity_id' => [
        'description' => 'Entity ID of the synced entity.',
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
      ],
      'status' => [
        'description' => 'Sync status, one of \Drupal\odoo_api_entity_sync\MappingManagerInterface::STATUS_* constants.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ],
      'odoo_id' => [
        'description' => 'Odoo ID of the synced entity.',
        'type' => 'int',
        'unsigned' => TRUE,
      ],
      'sync_time' => [
        'description' => 'A timestamp indicating when the item was synced.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ],
      'fail_time' => [
        'description' => 'A timestamp indicating when the item synced failed.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ],
      'cron_export' => [
        'description' => 'A flag indicating whether the record should be exported on cron',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 1,
      ],
    ],
    'primary key' => ['entity_type', 'odoo_model', 'export_type', 'entity_id'],
  ];

  return $schema;
}

/**
 * Create odoo_api_entity_sync table if it's missing.
 */
function odoo_api_entity_sync_update_8001() {
  $table = [
    'description' => 'Stores ID map and sync status of entities exported to Odoo',
    'fields' => [
      'entity_type' => [
        'description' => 'Entity type of the synced entity.',
        'type' => 'varchar',
        'length' => EntityTypeInterface::ID_MAX_LENGTH,
        'not null' => TRUE,
      ],
      'odoo_model' => [
        'description' => 'Odoo model of the synced entity.',
        'type' => 'varchar',
        'length' => '128',
        'not null' => TRUE,
      ],
      'export_type' => [
        'description' => 'Export type. May be used to export same entity multiple types.',
        'type' => 'varchar',
        'length' => '128',
        'not null' => TRUE,
        'default' => 'default',
      ],
      'entity_id' => [
        'description' => 'Entity ID of the synced entity.',
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
      ],
      'status' => [
        'description' => 'Sync status, one of \Drupal\odoo_api_entity_sync\MappingManagerInterface::STATUS_* constants.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ],
      'odoo_id' => [
        'description' => 'Odoo ID of the synced entity.',
        'type' => 'int',
        'unsigned' => TRUE,
      ],
      'sync_time' => [
        'description' => 'A timestamp indicating when the item was synced.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ],
    ],
    'primary key' => ['entity_type', 'odoo_model', 'export_type', 'entity_id'],
  ];

  $schema = \Drupal::database()->schema();
  if (!$schema->tableExists('odoo_api_entity_sync')) {
    $schema->createTable('odoo_api_entity_sync', $table);
  }
}

/**
 * Create odoo_api_entity_sync.fail_time field if it's missing.
 */
function odoo_api_entity_sync_update_8002() {
  $schema = \Drupal::database()->schema();
  if (!$schema->fieldExists('odoo_api_entity_sync', 'fail_time')) {
    $spec = [
      'description' => 'A timestamp indicating when the item synced failed.',
      'type' => 'int',
      'unsigned' => TRUE,
      'not null' => TRUE,
      'default' => 0,
    ];
    $schema->addField('odoo_api_entity_sync', 'fail_time', $spec);
  }
}

/**
 * Create odoo_api_entity_sync.cron_export field if it's missing.
 */
function odoo_api_entity_sync_update_8003() {
  $schema = \Drupal::database()->schema();
  if (!$schema->fieldExists('odoo_api_entity_sync', 'cron_export')) {
    $spec = [
      'description' => 'A flag indicating whether the record should be exported on cron',
      'type' => 'int',
      'unsigned' => TRUE,
      'not null' => TRUE,
      'default' => 1,
    ];
    $schema->addField('odoo_api_entity_sync', 'cron_export', $spec);
  }
}
